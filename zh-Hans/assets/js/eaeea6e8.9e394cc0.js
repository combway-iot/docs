"use strict";(self.webpackChunkcombway_website=self.webpackChunkcombway_website||[]).push([[1658],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>f});var o=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function p(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,o,i=function(e,n){if(null==e)return{};var t,o,i={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=o.createContext({}),s=function(e){var n=o.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):p(p({},n),e)),t},d=function(e){var n=s(e.components);return o.createElement(l.Provider,{value:n},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},g=o.forwardRef((function(e,n){var t=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,d=a(e,["components","mdxType","originalType","parentName"]),c=s(t),g=i,f=c["".concat(l,".").concat(g)]||c[g]||u[g]||r;return t?o.createElement(f,p(p({ref:n},d),{},{components:t})):o.createElement(f,p({ref:n},d))}));function f(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=t.length,p=new Array(r);p[0]=g;var a={};for(var l in n)hasOwnProperty.call(n,l)&&(a[l]=n[l]);a.originalType=e,a[c]="string"==typeof e?e:i,p[1]=a;for(var s=2;s<r;s++)p[s]=t[s];return o.createElement.apply(null,p)}return o.createElement.apply(null,t)}g.displayName="MDXCreateElement"},47:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>p,default:()=>u,frontMatter:()=>r,metadata:()=>a,toc:()=>s});var o=t(7462),i=(t(7294),t(3905));const r={},p="OpenWRT Support",a={unversionedId:"user/D1/openwrt",id:"user/D1/openwrt",title:"OpenWRT Support",description:"To get started, see OpenWRT Development at first.",source:"@site/docs/user/D1/openwrt.md",sourceDirName:"user/D1",slug:"/user/D1/openwrt",permalink:"/zh-Hans/docs/user/D1/openwrt",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"userSidebar",previous:{title:"Unified Cloud",permalink:"/zh-Hans/docs/user/D1/cloud"}},l={},s=[{value:"Add DTS file",id:"add-dts-file",level:2},{value:"Add Device",id:"add-device",level:2},{value:"Add default Network",id:"add-default-network",level:2}],d={toc:s},c="wrapper";function u(e){let{components:n,...t}=e;return(0,i.kt)(c,(0,o.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"openwrt-support"},"OpenWRT Support"),(0,i.kt)("p",null,"To get started, see ",(0,i.kt)("a",{parentName:"p",href:"/docs/developer/sdk_setup"},"OpenWRT Development")," at first."),(0,i.kt)("h2",{id:"add-dts-file"},"Add DTS file"),(0,i.kt)("p",null,"Copy the following contents to file ",(0,i.kt)("inlineCode",{parentName:"p"},"target/linux/ramips/dts/CW-IOT-7621-D1.dts"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'// SPDX-License-Identifier: GPL-2.0-or-later OR MIT\n/dts-v1/;\n\n#include "mt7621.dtsi"\n\n#include <dt-bindings/gpio/gpio.h>\n#include <dt-bindings/input/input.h>\n\n/ {\n    compatible = "iot-7621-d1", "mediatek,mt7621-soc";\n    model = "CW-IOT-7621-D1";\n\n    aliases {\n        led-boot = &led_power;\n        led-failsafe = &led_power;\n        led-running = &led_power;\n        led-upgrade = &led_power;\n    };\n\n    chosen {\n        bootargs = "console=ttyS0,115200";\n    };\n\n    leds {\n        compatible = "gpio-leds";\n\n        led_power: power {\n            label = "sx-7621:blue:power";\n            gpios = <&gpio0 16 GPIO_ACTIVE_LOW>;\n            default-state = "on";\n        };\n        sys {\n            label = "sys";\n            gpios = <&gpio0 14 GPIO_ACTIVE_LOW>;\n            default-state = "on";\n        };\n        usb {\n            label = "usb";\n            gpios = <&gpio0 19 GPIO_ACTIVE_LOW>;\n            default-state = "off";\n        };\n        minipcie {\n            label = "minipcie";\n            gpios = <&gpio0 23 GPIO_ACTIVE_LOW>;\n            default-state = "off";\n        };\n        pcie {\n            label = "pcie";\n            gpios = <&gpio0 22 GPIO_ACTIVE_LOW>;\n            default-state = "on";\n        };\n        rs232 {\n            label = "rs232";\n            gpios = <&gpio0 24 GPIO_ACTIVE_LOW>;\n            default-state = "off";\n        };\n        rs4850 {\n            label = "rs4850";\n            gpios = <&gpio0 25 GPIO_ACTIVE_LOW>;\n            default-state = "off";\n        };\n        rs4851 {\n            label = "rs4851";\n            gpios = <&gpio0 26 GPIO_ACTIVE_LOW>;\n            default-state = "off";\n        };\n    };\n\n    keys {\n        compatible = "gpio-keys-polled";\n        poll-interval = <20>;\n\n        reset {\n            label = "reset";\n            gpios = <&gpio0 11 GPIO_ACTIVE_LOW>;\n            linux,code = <KEY_RESTART>;\n        };\n\n    };\n    gpio_export {\n        compatible = "gpio-export";\n        #size-cells = <0>;\n\n        4gwan {\n            gpio-export,name = "4gwan";\n            gpio-export,output = <0>;\n            gpios = <&gpio0 19 GPIO_ACTIVE_LOW>;\n        };\n        minipcie {\n            gpio-export,name = "minipcie";\n            gpio-export,output = <0>;\n            gpio-export,direction_may_change = <1>;\n            gpios = <&gpio0 27 GPIO_ACTIVE_LOW>;\n        };\n        minipcieled {\n            gpio-export,name = "minipcieled";\n            gpio-export,output = <0>;\n            gpio-export,direction_may_change = <1>;\n            gpios = <&gpio0 23 GPIO_ACTIVE_LOW>;\n        };\n        pcieled {\n            gpio-export,name = "pcieled";\n            gpio-export,output = <1>;\n            gpio-export,direction_may_change = <1>;\n            gpios = <&gpio0 22 GPIO_ACTIVE_LOW>;\n        };\n        sys {\n            gpio-export,name = "sys";\n            gpio-export,output = <0>;\n            gpio-export,direction_may_change = <1>;\n            gpios = <&gpio0 14 GPIO_ACTIVE_LOW>;\n        };\n        rs232 {\n            gpio-export,name = "rs232";\n            gpio-export,output = <1>;\n            gpio-export,direction_may_change = <1>;\n            gpios = <&gpio0 24 GPIO_ACTIVE_LOW>;\n        };\n        rs4850 {\n            gpio-export,name = "rs4850";\n            gpio-export,output = <1>;\n            gpio-export,direction_may_change = <1>;\n            gpios = <&gpio0 25 GPIO_ACTIVE_LOW>;\n        };\n        rs4851 {\n            gpio-export,name = "rs4851";\n            gpio-export,output = <1>;\n            gpio-export,direction_may_change = <1>;\n            gpios = <&gpio0 26 GPIO_ACTIVE_LOW>;\n        };\n    };\n\n    watchdog {\n        compatible = "linux,wdt-gpio";\n        gpios = <&gpio0 12 GPIO_ACTIVE_HIGH>;\n        hw_algo = "toggle";\n        hw_margin_ms = <300>;\n        always-running;\n    };\n\n};\n\n&sdhci {\n    status = "okay";\n};\n\n&xhci {\n    status = "okay";\n};\n\n&uartlite2 {\n    status = "okay";\n};\n\n&uartlite3 {\n    status = "okay";\n};\n\n&spi0 {\n    status = "okay";\n\n    flash@0 {\n        compatible = "jedec,spi-nor";\n        reg = <0>;\n        spi-max-frequency = <10000000>;\n\n        partitions {\n            compatible = "fixed-partitions";\n            #address-cells = <1>;\n            #size-cells = <1>;\n\n            partition@0 {\n                label = "u-boot";\n                reg = <0x0 0x30000>;\n                read-only;\n            };\n\n            partition@30000 {\n                label = "u-boot-env";\n                reg = <0x30000 0x10000>;\n                read-only;\n            };\n\n            factory: partition@40000 {\n                label = "factory";\n                reg = <0x40000 0x10000>;\n            };\n\n            partition@50000 {\n                compatible = "denx,uimage";\n                label = "firmware";\n                reg = <0x50000 0xfb0000>;\n            };\n        };\n    };\n};\n\n&pcie {\n    status = "okay";\n};\n\n&pcie0 {\n    wifi@0,0 {\n        compatible = "pci14c3,7603";\n        reg = <0x0000 0 0 0 0>;\n        mediatek,mtd-eeprom = <&factory 0x0000>;\n        ieee80211-freq-limit = <2400000 2500000>;\n        led {\n            led-active-low;\n        };\n    };\n};\n\n&pcie1 {\n    wifi@0,0 {\n        compatible = "pci14c3,7662";\n        reg = <0x0000 0 0 0 0>;\n        mediatek,mtd-eeprom = <&factory 0x8000>;\n        ieee80211-freq-limit = <5000000 6000000>;\n        led {\n            led-sources = <2>;\n            led-active-low;\n        };\n    };\n};\n\n&ethernet {\n    mtd-mac-address = <&factory 0x4>;\n};\n\n&pinctrl {\n    state_default: pinctrl0 {\n        gpio {\n            ralink,group = "jtag", "wdt";\n            ralink,function = "gpio";\n        };\n    };\n};\n')),(0,i.kt)("h2",{id:"add-device"},"Add Device"),(0,i.kt)("p",null,"Add device definition in ",(0,i.kt)("inlineCode",{parentName:"p"},"target/linux/ramips/image/mt7621.mk")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"define Device/iot-7621-d1\n  DTS := CW-IOT-7621-D1\n  IMAGE_SIZE := $(ralink_default_fw_size_32M)\n  DEVICE_TITLE := COMBWAY CW-IOT-7621-D1\n  DEVICE_PACKAGES := kmod-usb2 kmod-usb-ohci\nendef\nTARGET_DEVICES += iot-7621-d1\n")),(0,i.kt)("h2",{id:"add-default-network"},"Add default Network"),(0,i.kt)("p",null,"Add a branch in function ",(0,i.kt)("inlineCode",{parentName:"p"},"ramips_setup_interfaces")," in ",(0,i.kt)("inlineCode",{parentName:"p"},"target/linux/ramips/base-files/etc/board.d/02_network")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'  iot-7621-d1)\n      ucidef_add_switch "switch0" \\\n        "1:lan:4" "2:lan:3" "3:lan:2" "0:lan:1" "4:wan" "6@eth0"\n    ;;\n')))}u.isMDXComponent=!0}}]);