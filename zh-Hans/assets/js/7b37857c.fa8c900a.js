"use strict";(self.webpackChunkcombway_website=self.webpackChunkcombway_website||[]).push([[901],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>v});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var u=n.createContext({}),s=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},d=function(e){var t=s(e.components);return n.createElement(u.Provider,{value:t},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,l=e.originalType,u=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),p=s(r),m=a,v=p["".concat(u,".").concat(m)]||p[m]||c[m]||l;return r?n.createElement(v,i(i({ref:t},d),{},{components:r})):n.createElement(v,i({ref:t},d))}));function v(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=r.length,i=new Array(l);i[0]=m;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o[p]="string"==typeof e?e:a,i[1]=o;for(var s=2;s<l;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},953:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>c,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var n=r(7462),a=(r(7294),r(3905));const l={},i="Industrial Interface",o={unversionedId:"user/ZT-RG1782PoE/industrial",id:"user/ZT-RG1782PoE/industrial",title:"Industrial Interface",description:"Industrial Interface",source:"@site/docs/user/ZT-RG1782PoE/industrial.md",sourceDirName:"user/ZT-RG1782PoE",slug:"/user/ZT-RG1782PoE/industrial",permalink:"/zh-Hans/docs/user/ZT-RG1782PoE/industrial",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"userSidebar",previous:{title:"Introduction",permalink:"/zh-Hans/docs/user/ZT-RG1782PoE/"},next:{title:"System",permalink:"/zh-Hans/docs/user/ZT-RG1782PoE/system"}},u={},s=[{value:"Industrial Interface",id:"industrial-interface-1",level:2},{value:"DI/DO",id:"dido",level:2},{value:"DI",id:"di",level:3},{value:"DO",id:"do",level:3},{value:"Serial",id:"serial",level:2},{value:"RS485",id:"rs485",level:3},{value:"RS232",id:"rs232",level:3},{value:"DTU Mode",id:"dtu-mode",level:3},{value:"Modbus Master",id:"modbus-master",level:3},{value:"Channel",id:"channel",level:4},{value:"Modbus Slave",id:"modbus-slave",level:3},{value:"Modbus TCP",id:"modbus-tcp",level:4},{value:"Modbus RTU",id:"modbus-rtu",level:4},{value:"Modbus RTU Over TCP",id:"modbus-rtu-over-tcp",level:4}],d={toc:s},p="wrapper";function c(e){let{components:t,...r}=e;return(0,a.kt)(p,(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"industrial-interface"},"Industrial Interface"),(0,a.kt)("h2",{id:"industrial-interface-1"},"Industrial Interface"),(0,a.kt)("h2",{id:"dido"},"DI/DO"),(0,a.kt)("p",null,"Digital I/O interface may be used as switch of high level for logical 1 and low level for logical 0."),(0,a.kt)("h3",{id:"di"},"DI"),(0,a.kt)("p",null,"Digital Input."),(0,a.kt)("p",null,"When input event ",(0,a.kt)("inlineCode",{parentName:"p"},"High level/Low level/Counter")," occur what should be done."),(0,a.kt)("h3",{id:"do"},"DO"),(0,a.kt)("p",null,"Digital Output."),(0,a.kt)("h2",{id:"serial"},"Serial"),(0,a.kt)("h3",{id:"rs485"},"RS485"),(0,a.kt)("p",null,"Support half-duplex serial communication distance up to 120m."),(0,a.kt)("h3",{id:"rs232"},"RS232"),(0,a.kt)("p",null,"Support full-duplex serial communication distance up to 20m."),(0,a.kt)("p",null,"Serial support ",(0,a.kt)("inlineCode",{parentName:"p"},"DTU Mode"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"Modbus Master")," ",(0,a.kt)("inlineCode",{parentName:"p"},"Modbus Slave")," work mode."),(0,a.kt)("h3",{id:"dtu-mode"},"DTU Mode"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Transparent"),(0,a.kt)("p",{parentName:"li"}," Router run TCP/UDP client, receive DTU from serial and send it to server, receive DTU from server and write to serial."),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"TCP client"),(0,a.kt)("li",{parentName:"ul"},"UDP client"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Modbus")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"TCP Server")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"UDP Server"))),(0,a.kt)("h3",{id:"modbus-master"},"Modbus Master"),(0,a.kt)("p",null,"Monitor the Modbus Slave and react accordingly."),(0,a.kt)("h4",{id:"channel"},"Channel"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Serial"),(0,a.kt)("li",{parentName:"ul"},"TCP")),(0,a.kt)("h3",{id:"modbus-slave"},"Modbus Slave"),(0,a.kt)("p",null,"Monitor the DI status and change the DO status."),(0,a.kt)("h4",{id:"modbus-tcp"},"Modbus TCP"),(0,a.kt)("p",null,"Define DI/DO ports and monitor the DI status and change the DO status via Modbus TCP."),(0,a.kt)("h4",{id:"modbus-rtu"},"Modbus RTU"),(0,a.kt)("p",null,"Define DI/DO ports and monitor the DI status and change the DO status via Modbus RTU."),(0,a.kt)("h4",{id:"modbus-rtu-over-tcp"},"Modbus RTU Over TCP"),(0,a.kt)("p",null,"Define DI/DO ports and monitor the DI status and change the DO status via Modbus RTU Over TCP."))}c.isMDXComponent=!0}}]);