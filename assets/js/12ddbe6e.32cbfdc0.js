"use strict";(self.webpackChunkcombway_website=self.webpackChunkcombway_website||[]).push([[2528],{3905:(t,e,a)=>{a.d(e,{Zo:()=>m,kt:()=>N});var r=a(7294);function n(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,r)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){n(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function p(t,e){if(null==t)return{};var a,r,n=function(t,e){if(null==t)return{};var a,r,n={},l=Object.keys(t);for(r=0;r<l.length;r++)a=l[r],e.indexOf(a)>=0||(n[a]=t[a]);return n}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(r=0;r<l.length;r++)a=l[r],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(n[a]=t[a])}return n}var o=r.createContext({}),d=function(t){var e=r.useContext(o),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},m=function(t){var e=d(t.components);return r.createElement(o.Provider,{value:e},t.children)},k="mdxType",s={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},f=r.forwardRef((function(t,e){var a=t.components,n=t.mdxType,l=t.originalType,o=t.parentName,m=p(t,["components","mdxType","originalType","parentName"]),k=d(a),f=n,N=k["".concat(o,".").concat(f)]||k[f]||s[f]||l;return a?r.createElement(N,i(i({ref:e},m),{},{components:a})):r.createElement(N,i({ref:e},m))}));function N(t,e){var a=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var l=a.length,i=new Array(l);i[0]=f;var p={};for(var o in e)hasOwnProperty.call(e,o)&&(p[o]=e[o]);p.originalType=t,p[k]="string"==typeof t?t:n,i[1]=p;for(var d=2;d<l;d++)i[d]=a[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}f.displayName="MDXCreateElement"},5347:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>o,contentTitle:()=>i,default:()=>s,frontMatter:()=>l,metadata:()=>p,toc:()=>d});var r=a(7462),n=(a(7294),a(3905));const l={},i="DTU Serial",p={unversionedId:"user/D1/serial_dtu",id:"user/D1/serial_dtu",title:"DTU Serial",description:"Transparent",source:"@site/docs/user/D1/serial_dtu.md",sourceDirName:"user/D1",slug:"/user/D1/serial_dtu",permalink:"/docs/user/D1/serial_dtu",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"userSidebar",previous:{title:"Introduction",permalink:"/docs/user/D1/industrial"},next:{title:"Modbus Slave Serial",permalink:"/docs/user/D1/serial_slave"}},o={},d=[{value:"Transparent",id:"transparent",level:2},{value:"UDP client",id:"udp-client",level:3},{value:"TCP client",id:"tcp-client",level:3},{value:"Modbus",id:"modbus",level:2},{value:"TCP Server",id:"tcp-server",level:2},{value:"UDP Server",id:"udp-server",level:2},{value:"MQTT",id:"mqtt",level:2}],m={toc:d},k="wrapper";function s(t){let{components:e,...a}=t;return(0,n.kt)(k,(0,r.Z)({},m,a,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"dtu-serial"},"DTU Serial"),(0,n.kt)("h2",{id:"transparent"},"Transparent"),(0,n.kt)("p",null,"Router run TCP/UDP client, receive DTU from serial and send it to server, receive DTU from server and write to serial."),(0,n.kt)("h3",{id:"udp-client"},"UDP client"),(0,n.kt)("p",null,"The following settings are special to transparent ",(0,n.kt)("inlineCode",{parentName:"p"},"UDP")," mode of the serial port."),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Setting"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Default"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Protocol"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Transport protocol"),(0,n.kt)("td",{parentName:"tr",align:"left"},"udp")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Register String"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Register string for the server"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Server List"),(0,n.kt)("td",{parentName:"tr",align:"left"},"List of Server address and port"),(0,n.kt)("td",{parentName:"tr",align:"left"})))),(0,n.kt)("h3",{id:"tcp-client"},"TCP client"),(0,n.kt)("p",null,"The following settings are special to transparent ",(0,n.kt)("inlineCode",{parentName:"p"},"TCP")," mode of the serial port."),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Setting"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Default"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Protocol"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Transport protocol"),(0,n.kt)("td",{parentName:"tr",align:"left"},"tcp")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Keepalive Interval"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Client send keepalive packet regularly, in seconds"),(0,n.kt)("td",{parentName:"tr",align:"left"},"1")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Keepalive Retry Times"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Client send keepalive packet retry times before exit"),(0,n.kt)("td",{parentName:"tr",align:"left"},"1")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Reconnect Interval"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Client reconnect when lost connection, in seconds"),(0,n.kt)("td",{parentName:"tr",align:"left"},"1")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Specific Protocol"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Client connect to a tcp2com server"),(0,n.kt)("td",{parentName:"tr",align:"left"},"disable")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Heartbeat Interval"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Client send tcp2com heartbeat packet regularly, in seconds"),(0,n.kt)("td",{parentName:"tr",align:"left"},"1")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Register String"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Register string for the server"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Server List"),(0,n.kt)("td",{parentName:"tr",align:"left"},"List of Server address and port"),(0,n.kt)("td",{parentName:"tr",align:"left"})))),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://tcp2com.sourceforge.net",title:"tcp2com Network mapper for Serial ports"},"tcp2com")),(0,n.kt)("h2",{id:"modbus"},"Modbus"),(0,n.kt)("p",null,"The following settings are special to ",(0,n.kt)("inlineCode",{parentName:"p"},"Modbus")," mode of the serial port."),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Setting"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Default"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Local Port"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Server listen port"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Maximun TCP Clients"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Maximun TCP clients allowed to connect"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Connnection Timeout"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Client connection timeout interval, in seconds"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Reading interval"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Device DTU read cycle interval, in seconds"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Response Timeout"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Device response timeout interval, in seconds"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Maximun Retries"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Maximun retries when reading data fail"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Packet Size"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Packet will be sent when the threshold reached"),(0,n.kt)("td",{parentName:"tr",align:"left"},"1024")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Serial Frame Interval"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Packet will be sent when the interval reached, in milliseconds"),(0,n.kt)("td",{parentName:"tr",align:"left"},"100")))),(0,n.kt)("h2",{id:"tcp-server"},"TCP Server"),(0,n.kt)("p",null,"The following settings are special to ",(0,n.kt)("inlineCode",{parentName:"p"},"TCP Server")," mode of the serial port."),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Setting"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Default"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Listening Port"),(0,n.kt)("td",{parentName:"tr",align:"left"},"TCP server listen port"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Keepalive Interval"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Server send keepalive packet regularly, in seconds"),(0,n.kt)("td",{parentName:"tr",align:"left"},"1")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Keepalive Retry Times"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Server send keepalive packet retry times before exit"),(0,n.kt)("td",{parentName:"tr",align:"left"},"1")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Packet Size"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Packet will be sent when the threshold reached"),(0,n.kt)("td",{parentName:"tr",align:"left"},"1024")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Serial Frame Interval"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Packet will be sent when the interval reached, in milliseconds"),(0,n.kt)("td",{parentName:"tr",align:"left"},"100")))),(0,n.kt)("h2",{id:"udp-server"},"UDP Server"),(0,n.kt)("p",null,"The following settings are special to ",(0,n.kt)("inlineCode",{parentName:"p"},"UDP Server")," mode of the serial port."),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Setting"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Default"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Listening Port"),(0,n.kt)("td",{parentName:"tr",align:"left"},"UDP server listen port"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Packet Size"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Packet will be sent when the threshold reached"),(0,n.kt)("td",{parentName:"tr",align:"left"},"1024")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Serial Frame Interval"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Packet will be sent when the interval reached, in milliseconds"),(0,n.kt)("td",{parentName:"tr",align:"left"},"100")))),(0,n.kt)("h2",{id:"mqtt"},"MQTT"),(0,n.kt)("p",null,"The following settings are special to ",(0,n.kt)("inlineCode",{parentName:"p"},"MQTT")," mode of the serial port."),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Setting"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Default"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"MQTT Host"),(0,n.kt)("td",{parentName:"tr",align:"left"},"MQTT server address or domain"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"MQTT Port"),(0,n.kt)("td",{parentName:"tr",align:"left"},"MQTT server port"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"ClientID"),(0,n.kt)("td",{parentName:"tr",align:"left"},"MQTT ClinetID when connect to server"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Keepalive"),(0,n.kt)("td",{parentName:"tr",align:"left"},"MQTT Client send keepalive packet regularly, in seconds"),(0,n.kt)("td",{parentName:"tr",align:"left"},"1")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Publish Topic"),(0,n.kt)("td",{parentName:"tr",align:"left"},"MQTT topic for publish message"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Subscribe Topic"),(0,n.kt)("td",{parentName:"tr",align:"left"},"MQTT topic for receive message"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"QoS"),(0,n.kt)("td",{parentName:"tr",align:"left"},"MQTT message QoS level"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Auth"),(0,n.kt)("td",{parentName:"tr",align:"left"},"MQTT authentication information"),(0,n.kt)("td",{parentName:"tr",align:"left"},"close")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Username"),(0,n.kt)("td",{parentName:"tr",align:"left"},"MQTT authentication username"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Password"),(0,n.kt)("td",{parentName:"tr",align:"left"},"MQTT authentication password"),(0,n.kt)("td",{parentName:"tr",align:"left"})))))}s.isMDXComponent=!0}}]);